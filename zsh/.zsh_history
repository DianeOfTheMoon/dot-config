git push
git lift
git status
ls
rm test.json
rm client.schema.json
rm test
ls test
rm -rf test
git status
git add .
git commit -m "chore: delete test files"
git push
git checkout main
git pull
ls
ls
git checkout -b feat/director-servers
python3 -m pip install --user --upgrade pynvim
python2 -m pip install --user --upgrade pynvim
helm get pods
helm list pods
kubectl get pods
kubectl get pods
helm remove
helm uninstall
helm delete
git status
git add .
git commit -m "feat: Added redis dependency"
git checkout feat/queue-list
git pull
brew upgrade
go version
skaffold dev
wd matchmaking
nvim test.json
cat test
cat test.json
git status
git checkout -b feat/actor-img
git checkout main
git pull
wd matchmaking
minikube tunnel
minikube tunnel
minikube tunnel
minikube tunnel
git status
docker prune
docker system prune
minikube tunner
minikube tunnel
minikube tunnel
cd
brew upgrade
brew update
git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow
git -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask fetch --unshallow
brew upgrade
brew upgrade
brew update
which mono
go
wd matchmaking
skaffold dev
minikube start
skaffold dev
skaffold dev
git status
git status
git add .
git commit -m "chore: Updated serializer naming for clarity."
git push
git checkout main
git pull
git branch
git branch -d feat/client-status
git branch -d feat/fe-lobby
git branch -d feat/queue-list
git branch -d feat/director-servers
git branch
git checkout feat/director-publish
git status
git rebase main
cd deploy/matchmaking/
help dep update
helm dep update
git status
git reset --hard head
git status
git checkout main
git branch
git branch -d feat/director-publish
git branch -D feat/director-publish
git status
git status
git checkout -b feat/join-queue
skaffold dev
cd ..
cd ..
skaffold dev
skaffold dev
git status
skaffold dev
skaffold dev
skaffold dev
skaffold dev
git status
git add .
git log
git commit -m "feat: Added ability to join queue"
git lift
skaffold dev
git status
git add .
git commit --amend
git push --force
git checkout main
git pull
git branch
git branch -d feat/join-queue
git status
git pull
git status
git checkout -b feat/client-cleanup
skaffold dev
git status
git add .
git commit -m "chore: Refactored client"
git status
git add .
git commit --amend
git status
flatc
flatc version
git status
git lift
git lift
git checkout main
git pull
git status
git branch
git checkout feat/client-cleanup
git checkout main
branch -d feat/client-cleanup
git branch -d feat/client-cleanup
git status
git checkout -b feat/game-start
cd projects
wd projects
ls
cd tactical-roguelike
git status
git reset --hard HEAD
git status
rm Assets/Features/Combat/AIActor.cs*
git status
rm Assets/Features/Combat/BaseActor.cs*
rm Assets/Features/Combat/DemoCombatCreator.cs*
rm Assets/Features/Combat/PlayerActor.cs*
rm Assets/Features/Patterns/Editor.meta
rm -rf Assets/Features/Patterns/Editor
rm -rf Assets/Features/Patterns/SceneLoader.cs*
rm Assets/TextMesh\ Pro*
rm -rf Assets/TextMesh\ Pro/
git status
git status
git pull
git status
ssh-add
brew upgrade
cd ..
ls
cd tactical-roguelike
ls
less .gitconfig
cd ..
mv cd tactical-roguelike
cd tactical-roguelike
nvim .git/config
cd ..
ls
rm -rf tactical-roguelike
git checkout git@github.com:robotpuffin/tactical-roguelike.git
git clone git@github.com:robotpuffin/tactical-roguelike.git
cd tactical-roguelike
ls
git status
cd Assets
cd Resources/Character
ls
cd Goblin
ls
cd LV3
ls
find -name *.png
man find
find ./ -name *.png
man find
find -name .png ./
find ./ -name .png
man find
find ./ -name .png -exec echo {} \;
man find
find ./ -name "*.png"
find -name "*.png"
find . -name "*.png"
zmv
nvim ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
zmv
ls **/*.png
ls */*/*.png
zmv '(*)/(*)/(*.png)' '$1/$2/$1_$2_$3'
cd ../../../../
cd ..
git status
git add .
git status
git commit -m "feat: Added IsoCharacterController."
cd Assets/Resources/Character
ls
cd Archer
ls
ls knightarcher_attack_nw
zmv '([^_]*)_([^_]*)_(.*)/Frame([0-9]*).png' '$3/$2/00$4.png'
man zmv
zmv
zmv -help
zmv --help
zmv '([^_]*)_([^_]*)_(*)/Frame([0-9]*).png' '$3/$2/00$4.png'
ls
zmv 'knightarcher_super_attack_(*)' 'knightarcher_super_$1'
ls
zmv '([^_]*)_([^_]*)_(*)/Frame([0-9]*).png' '$3/$2/00$4.png'
ls
mkdir n ne e se s sw w nw
ls
zmv '([^_]*)_([^_]*)_(*)/Frame([0-9]*).png' '$3/$2/00$4.png'
mv
man mv
mkdir e/death e/go e/idle e/super e/attack
mkdir w/death w/go w/idle w/super w/attack
mkdir n/death n/go n/idle n/super n/attack
mkdir s/death s/go s/idle s/super s/attack
mkdir sw/death sw/go sw/idle sw/super sw/attack
mkdir se/death se/go se/idle se/super se/attack
mkdir ne/death ne/go ne/idle ne/super ne/attack
mkdir nw/death nw/go nw/idle nw/super nw/attack
zmv '([^_]*)_([^_]*)_(*)/Frame([0-9]*).png' '$3/$2/00$4.png'
cd ..
wd projects
cd tactical-roguelike
git status
git commit --amend
git lift
dotnet --version
mono --version
git status
git pull
git status
git checkout -b feat/spawn-combat
git checkout main
git branch
git branch -d feat/actor-img
git branch -d feat/spawn-combat
cd ..
ls
cd tactical-roguelike
nvim ./.git/config
cd ..
mv tactical-roguelike murder-doggo
cd murder-doggo
git status
git branch
git branch -h
git branch -m feat/cell-contents
git status
git add .
git commit -m "feat: Added system to manage cell contents."
git lift
git checkout main
git pull
git status
git stash
git pull
git status
git reset --hard HEAD
git status
git checkout Assets/Plugins/Sirenix/Odin\ Inspector/Scripts/Editor/SerializedNetworkBehaviour.cs
git status
git add .
git stash
git pull
git status
git status
git add .
git status
git commit -m "chore: line endings"
git pull
git status
git reset --hard HEAD~2
git status
git rebase main
git add .
git commit -m "chore: line endings"
git rebase main
git status
git pull --rebase
git status
git log
ls
git checkout -b feat/spawn-combat
nvim .gitignore
git status
brew upgrade
cd ..
cd murder-doggo
git status
git checkout -b feat/spawning
wd pro
wd projects
cd murder-doggo
ls
cd Library
ls
git status
cd ..
ls
rm -rf Temp
ls
cd obj
ls
cd Debug
ls
cd ..
cd ..
rm -rf obj
git status
git reset --hard HEAD
git status
git reset --hard HEAD
git checkout main
git pull
git checkout feat/spawn-combat
git rebase main
ls Assets/Resources/Character/Goblin
git status
git reset --hard HEAD
git checkout main
git branch
git branch -d feat/cell-contents
git branch -d feat/spawn-combat
git checkout -b feat/use-power
git status
git status
git add .
git commit -m "feat: Added execution of powers."
git lift
git checkout main
git pull
git checkout -b fix/animate
git lift
git status
git add .
git commit -m "fix: Fixed issue with Iso controller."
git push
git checkout main
git pull
git checkout -b spawning
git checkout main
git branch -d spawning
git checkout spawning
git status
git reset --hard HEAD
git pull
git status
git reset --hard HEAD
git reset --hard HEAD~3
git pull
git status
brew cask install firecamp
brew install --cask firecamp
brew update
ps ax
kitty
kitty
kitty
ps axf
brew reinstall kitty
ps axf
nvim
which nvim
brew list neovim
brew upgrade neovim
cd
ls
cd bin
ls
cd ..
brew install neovim --HEAD
brew uninstall neovim
brew install neovim --HEAD
softwareupdate --all --install --force
brew install neovim --HEAD
softwareupdate --all --install --force
sudo rm -rf /Library/Developer/CommandLineTools
sudo xcode-select --install
brew install neovim --HEAD
luarocks unpack --lua-dir=/usr/local/opt/luajit mpack-1.0.8-0.rockspec --tree=/private/tmp/neovim-20210111-4216-1jd4mh6/deps-build
lua
/usr/local/opt/luajit
cd /usr/local
ls
cd ..
brew install luajit
brew unlink luajit
brew install luajit
brew install neovim --HEAD
nvim
ls
rm -rf ~/.config/nvim
nvim
ls
ls
cd bin
ls
mkdir neovim
cd neovim
wget https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz
curl https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz
brew install wget
curl https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz
wget https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz
tar -zxvf nvim-macos.tar.gz
cd ..
ln -s ./neovim/nvim-osx64/bin/nvim .
ls -la
chmod 755 nvim
cd ..
which nvim
ls
gopls
cd project
ls
cd ..
ls
cd Projects
ls
cd online-services-matchmaking
ls
nvim
nvim internal/director/profile.go
nvim ~/.config/nvim/init.lua
nvim ~/.config/nvim/init.lua
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
git status
git checkout internal/director/profile.go
ls
git checkout internal
ls
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
git status
git diff api/protocol/lobby.fbs
less api/openmatch
ls api/openmatch
ls api/openmatch/extensions.proto
nvim api/openmatch/extensions.proto
ls
cd build
ls
cd director
ls
cd ..
ls
cd ..
ls
cd deploy
ls
cd matchmaking
ls
nvim Chart.yaml
nvim values.yaml
ls
cd charts
ls
cd ..
cd templates
ls
cd matchmaking
ls
imp-tool
cd ..
cd ..
cd ..
cd ..
ls
circle
circle ci pipeline new --name premerge
ls -la
cd .buildkite
ls
cd ..
ls
cd build
ls
mkdir ci
cd ci
ls
wd projects
git clone https://github.com/improbable/online-services-infrastructure
cd online-services-infrastructure
ls
skaffold --help
skaffold version
brew update skaffold
brew upgrade skaffold
brew upgrade
git status
cd ..
cd online-services-matchmaking
git status
git add
git add .
git commit -m "feat: Added buildkite ci"
git status
circle
circle ci
circle ci pipeline
circle ci pipeline push
circle ci pipeline push premerge
circle ci pipeline premerge push
circle ci pipeline push
history | less circle
history | grep circle
circle ci pipeline push --name premerge
git lift
nvim internal/director/profile.go
nvim internal/director/profile.go
nvim internal/director/profile.go
circle ci pipeline push --name premerge
git pull
git status
git add .
git commit -m "chore: update buildkite script"
git push
cd ..
cd murder-doggo
nvim
nvim Assets/Features/Combat/Components/PowerUsed.cs
git status
git checkout main
git pull
git status
nvim Assets/Features/Combat/Components/PowerUsed.cs
nvim Assets/Features/Combat/Components/PowerUsed.cs
nvim Assets/Features/Combat/Components/PowerUsed.cs
brew install lua-language-server
brew install omnisharp
brew update
rm -rf /usr/local/var/homebrew/locks
brew update
brew upgrade
brew tap omnisharp/omnisharp-roslyn
brew install omnisharp-mono
which mono
brew install lua-lsp
omnisharp
which omnisharp
which mono
/usr/local/bin/mono
/usr/local/bin/
brew install mono
brew link mono
brew link --overwrite mono
which mono
which nvim
nvim
nvim
ls
brew unlink neovim
brew install neovim
ls ./.local/share/nvim
ls ./.local/share/nvim/site
rm -rf .local/share/nvim
nvim
nvim .config/nvim/lua/init.lua
mkdir -p .config/nvim/lua/
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
ls
ls
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/lua/keybinds.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
cd .config
ls -la
git status
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/init.lua
nvim nvim/init.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/init.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
ls -la
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
nvim nvim/lua/config_statusline.lua
ls
cd bin
ls
cd ..
ls
ls
wd projects
cd online-services-matchmaking
ls
nvim
nvim
wd matchmaking
nvim internal/lobby/frontend/client.go
nvim internal/lobby/frontend/client.go
nvim internal/lobby/frontend/client.go
omnisharp --version
omnisharp --help
omnisharp -h -l DEBUG
omnisharp -l DEBUG
cd ..
cd murder-doggo
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
which mono
which mono
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
omnisharp -s
omnisharp -h
nvim Assets/Features/Combat/Systems/CombatPhaseSystem.cs
cat .local/share/nvim/lsp.log
tail -f .local/share/nvim/lsp.log
tail -f .local/share/nvim/lsp.log
which mono
nvim
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/lua/config_statusline.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/lua/lsp.lua
wd projects
cd murder-doggo
omnishap --languageserver
omnisharp --languageserver
omnisharp --languageserver --hostPID 123
onmisharp
omnisharp
/usr/local/bin/omnisharp --languageserver --hostPID 63688
brew list omnisharp
brew list omnisharp-mono
cd ~/bin
ls
mkdir omnisharp
cd omnisharp
ls
wget https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.37.5/omnisharp-mono.tar.gz
tar -zxvf omnisharp-mono.tar.gz
ls
./OmniSharp.Exe
chmod 755 OmniSharp.exe
./OmniSharp.exe
mono OmniSharp.exe
ls
rm -rf *
ls
wget https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.37.5/omnisharp-osx.tar.gz
tar -zxvf omnisharp-osx.tar.gz
ls
ls bin
ls run
./run
less run
rm -rf *
wget https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.37.5/omnisharp-mono.tar.gz
tar -zxvf omnisharp-mono.tar.gz
mono OmniSharp.Exe
cd ..
ls
nvim omnisharp
mv omnisharp omni_src
nvim omnisharp
nvim omnisharp
chmod 755 omnisharp
cd ..
which omnisharp
/Users/diane/bin/omnisharp
nvim bin/omnisharp
/Users/diane/bin/omnisharp
/Users/diane/bin/omnisharp --languageserver
/Users/diane/bin/omnisharp --help
nvim bin/omnisharp
cd bin/omni_src
ls
rm -rf *
wget https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.37.5/omnisharp-osx.tar.gz
tar -zxvf omnisharp-osx.tar.gz
ls
run -h
./run -h
less run
cd ..
ls
rm omnisharp
ln -s omni_src/run omnisharp
ls -la
cd omni_src
ls
ls
cd etc
ls
less config
less mono/4.5/machine.config
cd ..
wd projects
cd murder-doggo
omnisharp
wd lobby
cd ..
cd online-services-matchmaking
ls
nvim internal/lobby/frontend/client.go
nvim api/protocol/client.fbs
nvim internal/lobby/frontend/client.go
nvim internal/lobby/frontend/client.go
which omnisharp
cd ..
cd murder-doggo
ls
nvim Assets/Features/Combat/Components/Combat.cs
nvim Assets/Features/Combat/Components/Combat.cs
nvim Assets/Features/Combat/Components/Combat.cs
nvim Assets/Features/Combat/Components/Combat.cs
nvim Assets/Features/Combat/Components/Combat.cs
nvim Assets/Features/Combat/Components/Combat.cs
nvim Assets/Features/Combat/Components/Combat.cs
nvim Assets/Features/Combat/Components/Combat.cs
nvim Assets/Features/Combat/Components/PowerUsed.cs
cd Assets/Features/Combat/Components
nvim PowerUsed.cs
cd ..
cd ..
ls
cd ..
cd ..
ls
nvim RPG.csproj
nvim Assets/Features/Combat/Components/PowerUsed.cs
cd
ls
./bin/omnisharp
./bin/omnisharp --languageserver
./bin/omnisharp --help
./bin/omnisharp -v -s
./bin/omnisharp -v -s /Users/diane/projects/murder-doggo
./bin/omnisharp -v -s /Users/diane/projects/murder-doggo
./bin/omnisharp -v -s /Users/diane/projects/murder-doggo
./bin/omnisharp -v -s /Users/diane/projects/murder-doggo
./bin/omnisharp -v -s /Users/diane/projects/murder-doggo
mono /Users/diane/bin/omni_src/OmniSharp.Exe -v -s /Users/diane/projects/murder-doggo
cd
cd bin
ls
cd omni_src
cd ..
rm omnisharp
cd omni_src
ls
mv run ../
cd ..
mv run omnisharp
nvim omnisharp
rm omnisharp
rm -rf omni_src
mkdir omni_src
cd omni_src
wget https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v1.37.5/omnisharp-osx.tar.gz
ls
tar -zxvf omnisharp-osx.tar.gz
ls
mv run ../omnisharp
cd ..
nvim omnisharp
nvim omnisharp
cd bin
ls
cd omni_src
ls
cd lib
ls
cd ..
cd etc
ls
cd mono
ls
cd 4.5
ls
less machine.config
cd ..
cd ..
cd ..
ls
cd omnisharp
ls
cd ..
ls
cd bin
ls
cd ..
ls /
cd /var/log
ls
less system.log
cd
omnisharp -h
cd bin
ls
cd omni_src
ls
cd ..
cd ..
which omnisharp
ls
wd projects
cd murder-doggo
omnisharp
which omnisharp
brew uninstall omnisharp
brew uninstall omnisharp-mono
which mono
which omnisharp
omnisharp
omnisharp
brew uninstall mono
omnisharp
which mono
omnisharp
